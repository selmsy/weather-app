{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst BASE_URL = 'http://api.openweathermap.org';\nconst useForecast = () => {\n  _s();\n  const [term, setTerm] = useState('');\n  const [options, setOptions] = useState([]);\n  const [city, setCity] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const getSearchOptions = async term => {\n    fetch(`${BASE_URL}/geo/1.0/direct?q=${term.trim()}&limit=5&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => setOptions(data)).catch(ev => console.log({\n      ev\n    }));\n  };\n  const onInputChange = ev => {\n    const value = ev.target.value.trim();\n    setTerm(ev.target.value);\n    if (value !== '') {\n      getSearchOptions(value);\n    }\n  };\n  const getForecast = data => {\n    fetch(`${BASE_URL}/data/2.5/weather?q=${data.lat}&lon=${data.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => setForecast(data));\n  };\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  const onOptionSelect = option => {\n    setCity(option);\n  };\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOptions([]);\n    }\n  }, [city]);\n  return {\n    forecast,\n    options,\n    term,\n    onOptionSelect,\n    onSubmit,\n    onInputChange\n  };\n};\n_s(useForecast, \"J8orQNt2o9TWGtLYNOddVlQn/bY=\");\nexport default useForecast;","map":{"version":3,"names":["useState","useEffect","BASE_URL","useForecast","term","setTerm","options","setOptions","city","setCity","forecast","setForecast","getSearchOptions","fetch","trim","process","env","REACT_APP_API_KEY","then","res","json","data","catch","ev","console","log","onInputChange","value","target","getForecast","lat","lon","onSubmit","onOptionSelect","option","name"],"sources":["/Users/selma/Documents/Projects/w-app/src/hooks/useForecast.ts"],"sourcesContent":[" import { useState, useEffect, ChangeEvent } from \"react\"\n import { optionType } from \"../types/index\"\n import { forecastType } from \"../../types\"\n \n const BASE_URL = 'http://api.openweathermap.org'\n\n const useForecast = () => {\n const [term, setTerm] = useState<string>('')\n const [options, setOptions] = useState<[]>([])\nconst [city, setCity] = useState<optionType | null >(null)\nconst [forecast, setForecast] = useState<forecastType | null>(null)\n\n const getSearchOptions = async (term: string) => {\n  fetch(`${BASE_URL}/geo/1.0/direct?q=${term.trim()}&limit=5&appid=${process.env.REACT_APP_API_KEY}`)\n .then((res)=>res.json())\n .then((data) => setOptions(data))\n .catch((ev) => console.log({ ev }))\n}\n \nconst onInputChange = (ev: ChangeEvent<HTMLInputElement>) => {\n  const value = ev.target.value.trim();\n  setTerm(ev.target.value);\n\n  if(value !== '') {\n    getSearchOptions(value)\n  }\n  \n  \n }\n\n const getForecast = (data: optionType) => {\nfetch(`${BASE_URL}/data/2.5/weather?q=${data.lat}&lon=${data.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`)\n.then((res)=>res.json())\n.then((data) => setForecast((data)))\n\n }\n\n const onSubmit = () => {\nif(!city)  return\ngetForecast(city)\n\n\n }\n\n const onOptionSelect = (option: optionType) => {\n  setCity(option)\n }\n\n\n\n useEffect(() => {\n  if(city) {\n    setTerm(city.name)\n    setOptions([])\n  }\n\n }, [city])\n\n return {\n  forecast,\n  options,\n  term,\n  onOptionSelect,\n  onSubmit,\n  onInputChange,\n}\n\n}\n\nexport default useForecast"],"mappings":";AAAC,SAASA,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AAIxD,MAAMC,QAAQ,GAAG,+BAA+B;AAEhD,MAAMC,WAAW,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAK,EAAE,CAAC;EAC/C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAqB,IAAI,CAAC;EAC1D,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAsB,IAAI,CAAC;EAElE,MAAMY,gBAAgB,GAAG,MAAOR,IAAY,IAAK;IAChDS,KAAK,CAAE,GAAEX,QAAS,qBAAoBE,IAAI,CAACU,IAAI,EAAG,kBAAiBC,OAAO,CAACC,GAAG,CAACC,iBAAkB,EAAC,CAAC,CACnGC,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAKd,UAAU,CAACc,IAAI,CAAC,CAAC,CAChCC,KAAK,CAAEC,EAAE,IAAKC,OAAO,CAACC,GAAG,CAAC;MAAEF;IAAG,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMG,aAAa,GAAIH,EAAiC,IAAK;IAC3D,MAAMI,KAAK,GAAGJ,EAAE,CAACK,MAAM,CAACD,KAAK,CAACb,IAAI,EAAE;IACpCT,OAAO,CAACkB,EAAE,CAACK,MAAM,CAACD,KAAK,CAAC;IAExB,IAAGA,KAAK,KAAK,EAAE,EAAE;MACff,gBAAgB,CAACe,KAAK,CAAC;IACzB;EAGD,CAAC;EAED,MAAME,WAAW,GAAIR,IAAgB,IAAK;IAC3CR,KAAK,CAAE,GAAEX,QAAS,uBAAsBmB,IAAI,CAACS,GAAI,QAAOT,IAAI,CAACU,GAAI,uBAAsBhB,OAAO,CAACC,GAAG,CAACC,iBAAkB,EAAC,CAAC,CACtHC,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAKV,WAAW,CAAEU,IAAI,CAAE,CAAC;EAEnC,CAAC;EAED,MAAMW,QAAQ,GAAG,MAAM;IACxB,IAAG,CAACxB,IAAI,EAAG;IACXqB,WAAW,CAACrB,IAAI,CAAC;EAGhB,CAAC;EAED,MAAMyB,cAAc,GAAIC,MAAkB,IAAK;IAC9CzB,OAAO,CAACyB,MAAM,CAAC;EAChB,CAAC;EAIDjC,SAAS,CAAC,MAAM;IACf,IAAGO,IAAI,EAAE;MACPH,OAAO,CAACG,IAAI,CAAC2B,IAAI,CAAC;MAClB5B,UAAU,CAAC,EAAE,CAAC;IAChB;EAED,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EAEV,OAAO;IACNE,QAAQ;IACRJ,OAAO;IACPF,IAAI;IACJ6B,cAAc;IACdD,QAAQ;IACRN;EACF,CAAC;AAED,CAAC;AAAA,GA7DMvB,WAAW;AA+DlB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}