{"ast":null,"code":"import _slicedToArray from\"/Users/selma/Documents/Projects/w-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";var useForecast=function useForecast(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),term=_useState2[0],setTerm=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),options=_useState4[0],setOptions=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),city=_useState6[0],setCity=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),forecast=_useState8[0],setForecast=_useState8[1];var getSearchOptions=function getSearchOptions(value){fetch(\"https://api.openweathermap.org/geo/1.0/direct?q=\".concat(value.trim(),\"&limit=5&appid=\").concat(process.env.REACT_APP_API_KEY)).then(function(res){return res.json();}).then(function(data){return setOptions(data);});};var onInputChange=function onInputChange(ev){var value=ev.target.value.trim();setTerm(value);if(value==='')return;getSearchOptions(value);};var getForecast=function getForecast(city){fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city.lat,\"&lon=\").concat(city.lon,\"&units=metric&appid=\").concat(process.env.REACT_APP_API_KEY)).then(function(res){return res.json();}).then(function(data){return setForecast(data);});};var onSubmit=function onSubmit(){if(!city)return;getForecast(city);};var onOptionSelect=function onOptionSelect(option){setCity(option);fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(option.lat,\"&lon=\").concat(option.lon,\"&units=metric&appid=\").concat(process.env.REACT_APP_API_KEY)).then(function(res){return res.json();}).then(function(data){return console.log({data:data});});};useEffect(function(){if(city){setTerm(city.name);setOptions([]);}},[city]);};export default useForecast;","map":{"version":3,"names":["useState","useEffect","useForecast","term","setTerm","options","setOptions","city","setCity","forecast","setForecast","getSearchOptions","value","fetch","trim","process","env","REACT_APP_API_KEY","then","res","json","data","onInputChange","ev","target","getForecast","lat","lon","onSubmit","onOptionSelect","option","console","log","name"],"sources":["/Users/selma/Documents/Projects/w-app/src/hooks/useForecast.ts"],"sourcesContent":[" import { useState, useEffect, ChangeEvent } from \"react\"\n import {optionType} from \"../types\"\n \n\n const useForecast = () => {\n const [term, setTerm] = useState<string>('')\n const [options, setOptions] = useState<[]>([])\nconst [city, setCity] = useState<optionType | null >(null)\nconst [forecast, setForecast] = useState<forecastType | null>(null)\n\n const getSearchOptions = (value: string) => {\n  fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${process.env.REACT_APP_API_KEY}`)\n .then((res)=>res.json())\n .then((data) => setOptions(data))\n}\n \nconst onInputChange = (ev: ChangeEvent<HTMLInputElement>) => {\n  const value = ev.target.value.trim();\n  setTerm(value);\n\n  if(value === '') return \n  \n  getSearchOptions(value)\n }\n\n const getForecast = (city: optionType) => {\nfetch(`https://api.openweathermap.org/data/2.5/weather?q=${city.lat}&lon=${city.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`)\n.then((res)=>res.json())\n.then((data) => setForecast((data)))\n\n }\n\n const onSubmit = () => {\nif(!city)  return\ngetForecast(city)\n\n\n }\n\n const onOptionSelect = (option: optionType) => {\n  setCity(option);\n\n\nfetch(`https://api.openweathermap.org/data/2.5/weather?lat=${option.lat}&lon=${option.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`)\n.then((res)=>res.json())\n.then((data) => console.log({data}))\n }\n\n useEffect(() => {\n  if(city) {\n    setTerm(city.name)\n    setOptions([])\n  }\n\n }, [city])\n\n}\n\nexport default useForecast"],"mappings":"2HAAC,OAASA,QAAQ,CAAEC,SAAS,KAAqB,OAAO,CAIxD,GAAMC,YAAW,CAAG,QAAdA,YAAW,EAAS,CAC1B,cAAwBF,QAAQ,CAAS,EAAE,CAAC,wCAArCG,IAAI,eAAEC,OAAO,eACpB,eAA8BJ,QAAQ,CAAK,EAAE,CAAC,yCAAvCK,OAAO,eAAEC,UAAU,eAC3B,eAAwBN,QAAQ,CAAqB,IAAI,CAAC,yCAAnDO,IAAI,eAAEC,OAAO,eACpB,eAAgCR,QAAQ,CAAsB,IAAI,CAAC,yCAA5DS,QAAQ,eAAEC,WAAW,eAE3B,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIC,KAAa,CAAK,CAC3CC,KAAK,2DAAoDD,KAAK,CAACE,IAAI,EAAE,2BAAkBC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAG,CACvHC,IAAI,CAAC,SAACC,GAAG,QAAGA,IAAG,CAACC,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAACG,IAAI,QAAKf,WAAU,CAACe,IAAI,CAAC,GAAC,CAClC,CAAC,CAED,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,EAAiC,CAAK,CAC3D,GAAMX,MAAK,CAAGW,EAAE,CAACC,MAAM,CAACZ,KAAK,CAACE,IAAI,EAAE,CACpCV,OAAO,CAACQ,KAAK,CAAC,CAEd,GAAGA,KAAK,GAAK,EAAE,CAAE,OAEjBD,gBAAgB,CAACC,KAAK,CAAC,CACxB,CAAC,CAED,GAAMa,YAAW,CAAG,QAAdA,YAAW,CAAIlB,IAAgB,CAAK,CAC3CM,KAAK,6DAAsDN,IAAI,CAACmB,GAAG,iBAAQnB,IAAI,CAACoB,GAAG,gCAAuBZ,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAG,CACzIC,IAAI,CAAC,SAACC,GAAG,QAAGA,IAAG,CAACC,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAACG,IAAI,QAAKX,YAAW,CAAEW,IAAI,CAAE,GAAC,CAEnC,CAAC,CAED,GAAMO,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACxB,GAAG,CAACrB,IAAI,CAAG,OACXkB,WAAW,CAAClB,IAAI,CAAC,CAGhB,CAAC,CAED,GAAMsB,eAAc,CAAG,QAAjBA,eAAc,CAAIC,MAAkB,CAAK,CAC9CtB,OAAO,CAACsB,MAAM,CAAC,CAGjBjB,KAAK,+DAAwDiB,MAAM,CAACJ,GAAG,iBAAQI,MAAM,CAACH,GAAG,gCAAuBZ,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAG,CAC/IC,IAAI,CAAC,SAACC,GAAG,QAAGA,IAAG,CAACC,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAACG,IAAI,QAAKU,QAAO,CAACC,GAAG,CAAC,CAACX,IAAI,CAAJA,IAAI,CAAC,CAAC,GAAC,CACnC,CAAC,CAEDpB,SAAS,CAAC,UAAM,CACf,GAAGM,IAAI,CAAE,CACPH,OAAO,CAACG,IAAI,CAAC0B,IAAI,CAAC,CAClB3B,UAAU,CAAC,EAAE,CAAC,CAChB,CAED,CAAC,CAAE,CAACC,IAAI,CAAC,CAAC,CAEX,CAAC,CAED,cAAeL,YAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}